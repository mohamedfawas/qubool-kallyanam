syntax = "proto3";

package user.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/mohamedfawas/qubool-kallyanam/api/proto/user/v1;userpb";

service UserService {
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse);
  rpc PatchProfile(PatchProfileRequest) returns (UpdateProfileResponse);
  rpc UploadProfilePhoto(UploadProfilePhotoRequest) returns (UploadProfilePhotoResponse);
  rpc DeleteProfilePhoto(DeleteProfilePhotoRequest) returns (DeleteProfilePhotoResponse);
  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);
  rpc UpdatePartnerPreferences(UpdatePartnerPreferencesRequest) returns (UpdatePartnerPreferencesResponse);
  rpc PatchPartnerPreferences(PatchPartnerPreferencesRequest) returns (UpdatePartnerPreferencesResponse);
  rpc GetPartnerPreferences(GetPartnerPreferencesRequest) returns (GetPartnerPreferencesResponse);
  rpc GetRecommendedMatches(GetRecommendedMatchesRequest) returns (GetRecommendedMatchesResponse);
  rpc RecordMatchAction(RecordMatchActionRequest) returns (RecordMatchActionResponse);
  rpc UpdateMatchAction(UpdateMatchActionRequest) returns (UpdateMatchActionResponse);
  rpc GetMatchHistory(GetMatchHistoryRequest) returns (GetMatchHistoryResponse);
  rpc GetMutualMatches(GetMutualMatchesRequest) returns (GetMutualMatchesResponse);
  rpc GetProfileByID(GetProfileByIDRequest) returns (GetProfileByIDResponse);
  rpc GetBasicProfile(GetBasicProfileRequest) returns (GetBasicProfileResponse);
  rpc UploadUserPhoto(UploadUserPhotoRequest) returns (UploadUserPhotoResponse);
  rpc GetUserPhotos(GetUserPhotosRequest) returns (GetUserPhotosResponse);
  rpc DeleteUserPhoto(DeleteUserPhotoRequest) returns (DeleteUserPhotoResponse);
  rpc UploadUserVideo(UploadUserVideoRequest) returns (UploadUserVideoResponse);
  rpc GetUserVideo(GetUserVideoRequest) returns (GetUserVideoResponse);
  rpc DeleteUserVideo(DeleteUserVideoRequest) returns (DeleteUserVideoResponse);
  rpc GetDetailedProfile(GetDetailedProfileRequest) returns (GetDetailedProfileResponse);
  rpc GetProfileForAdmin(GetProfileForAdminRequest) returns (GetDetailedProfileResponse);
}

message UpdateProfileRequest {
  bool is_bride = 1;
  string full_name = 2;
  string date_of_birth = 3;
  int32 height_cm = 4;
  bool physically_challenged = 5;
  string community = 6;
  string marital_status = 7;
  string profession = 8;
  string profession_type = 9;
  string highest_education_level = 10;
  string home_district = 11;
}

message UpdateProfileResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}

message PatchProfileRequest {
  google.protobuf.BoolValue is_bride = 1;
  google.protobuf.StringValue full_name = 2;
  string date_of_birth = 3;
  google.protobuf.Int32Value height_cm = 4;
  google.protobuf.BoolValue physically_challenged = 5;
  google.protobuf.StringValue community = 6;
  google.protobuf.StringValue marital_status = 7;
  google.protobuf.StringValue profession = 8;
  google.protobuf.StringValue profession_type = 9;
  google.protobuf.StringValue highest_education_level = 10;
  google.protobuf.StringValue home_district = 11;
  // Fields to nullify (set to null/empty)
  bool clear_date_of_birth = 12;
  bool clear_height_cm = 13;
}

message UploadProfilePhotoRequest {
  bytes photo_data = 1;
  string file_name = 2;
  string content_type = 3;
}

message UploadProfilePhotoResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  string photo_url = 4;
}

message DeleteProfilePhotoRequest {
  // No fields needed as user ID will be extracted from auth context
}

message DeleteProfilePhotoResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}

message GetProfileRequest {
  // No fields needed as user ID will be extracted from auth context
}

message ProfileData {
  uint64 id = 1;
  bool is_bride = 2;
  string full_name = 3;
  string phone = 4;
  string date_of_birth = 5;
  int32 height_cm = 6;
  bool physically_challenged = 7;
  string community = 8;
  string marital_status = 9;
  string profession = 10;
  string profession_type = 11;
  string highest_education_level = 12;
  string home_district = 13;
  string profile_picture_url = 14;
  google.protobuf.Timestamp last_login = 15;
  google.protobuf.Timestamp created_at = 16;
}

message GetProfileResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  ProfileData profile = 4;
}

message UpdatePartnerPreferencesRequest {
  int32 min_age_years = 1;
  int32 max_age_years = 2;
  int32 min_height_cm = 3;
  int32 max_height_cm = 4;
  bool accept_physically_challenged = 5;
  repeated string preferred_communities = 6;
  repeated string preferred_marital_status = 7;
  repeated string preferred_professions = 8;
  repeated string preferred_profession_types = 9;
  repeated string preferred_education_levels = 10;
  repeated string preferred_home_districts = 11;
}

message UpdatePartnerPreferencesResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}

message PatchPartnerPreferencesRequest {
  google.protobuf.Int32Value min_age_years = 1;
  google.protobuf.Int32Value max_age_years = 2;
  google.protobuf.Int32Value min_height_cm = 3;
  google.protobuf.Int32Value max_height_cm = 4;
  google.protobuf.BoolValue accept_physically_challenged = 5;
  repeated string preferred_communities = 6;
  repeated string preferred_marital_status = 7;
  repeated string preferred_professions = 8;
  repeated string preferred_profession_types = 9;
  repeated string preferred_education_levels = 10;
  repeated string preferred_home_districts = 11;
  // Fields to clear (set to empty arrays)
  bool clear_preferred_communities = 12;
  bool clear_preferred_marital_status = 13;
  bool clear_preferred_professions = 14;
  bool clear_preferred_profession_types = 15;
  bool clear_preferred_education_levels = 16;
  bool clear_preferred_home_districts = 17;
}

message GetPartnerPreferencesRequest {
  // No fields needed as user ID will be extracted from auth context
}

message PartnerPreferencesData {
  int32 min_age_years = 1;
  int32 max_age_years = 2;
  int32 min_height_cm = 3;
  int32 max_height_cm = 4;
  bool accept_physically_challenged = 5;
  repeated string preferred_communities = 6;
  repeated string preferred_marital_status = 7;
  repeated string preferred_professions = 8;
  repeated string preferred_profession_types = 9;
  repeated string preferred_education_levels = 10;
  repeated string preferred_home_districts = 11;
}

message GetPartnerPreferencesResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  PartnerPreferencesData preferences = 4;
}

message GetRecommendedMatchesRequest {
  int32 limit = 1;  // Number of profiles to return (default 10, max 50)
  int32 offset = 2; // Pagination offset (default 0)
}

message GetRecommendedMatchesResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  repeated RecommendedProfileData profiles = 4;
  PaginationData pagination = 5;
}

message RecommendedProfileData {
  uint64 profile_id = 1; 
  string full_name = 2;
  int32 age = 3;
  int32 height_cm = 4;
  bool physically_challenged = 5;
  string community = 6;
  string marital_status = 7;
  string profession = 8;
  string profession_type = 9;
  string highest_education_level = 10;
  string home_district = 11;
  string profile_picture_url = 12;
  google.protobuf.Timestamp last_login = 13;
  repeated string match_reasons = 14;
}

message PaginationData {
  int32 total = 1;
  int32 limit = 2;
  int32 offset = 3;
  bool has_more = 4;
}

message RecordMatchActionRequest {
  uint64 profile_id = 1;  // Changed from string target_user_id
  string action = 2;      // "liked" or "passed"
}

message RecordMatchActionResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  bool is_mutual_match = 4;
}

message GetMatchHistoryRequest {
  string status = 1;    // Optional: "liked" or "passed"
  int32 limit = 2;      // Number of results (default 20, max 50)
  int32 offset = 3;     // Pagination offset (default 0)
}

message GetMatchHistoryResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  repeated MatchHistoryItem matches = 4;
  PaginationData pagination = 5;
}

message MatchHistoryItem {
  uint64 profile_id = 1;
  string full_name = 2;
  int32 age = 3;
  int32 height_cm = 4;
  bool physically_challenged = 5;
  string community = 6;
  string marital_status = 7;
  string profession = 8;
  string profession_type = 9;
  string highest_education_level = 10;
  string home_district = 11;
  string profile_picture_url = 12;
  string action = 13;                           // "liked" or "passed"
  google.protobuf.Timestamp action_date = 14;   // When the action was taken
}

message UpdateMatchActionRequest {
  uint64 profile_id = 1;  // Profile ID to update action for
  string action = 2;      // New action: "liked" or "passed"
}

message UpdateMatchActionResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  bool is_mutual_match = 4;
  bool was_mutual_match_broken = 5;  // True if this update broke an existing mutual match
}

message GetMutualMatchesRequest {
  int32 limit = 1;  // Number of mutual matches to return (default 20, max 50)
  int32 offset = 2; // Pagination offset (default 0)
}

message GetMutualMatchesResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  repeated MutualMatchData matches = 4;
  PaginationData pagination = 5;
}

message MutualMatchData {
  uint64 profile_id = 1;
  string full_name = 2;
  int32 age = 3;
  int32 height_cm = 4;
  bool physically_challenged = 5;
  string community = 6;
  string marital_status = 7;
  string profession = 8;
  string profession_type = 9;
  string highest_education_level = 10;
  string home_district = 11;
  string profile_picture_url = 12;
  google.protobuf.Timestamp last_login = 13;
  google.protobuf.Timestamp matched_at = 14;  // When the mutual match was created
}

// New messages for chat integration
message GetProfileByIDRequest {
  uint64 profile_id = 1; // Public profile ID
}

message GetProfileByIDResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  string user_uuid = 4; // UUID corresponding to the profile ID
}

message GetBasicProfileRequest {
  string user_uuid = 1; // User UUID
}

message BasicProfileData {
  uint64 id = 1;                   // Public profile ID
  string full_name = 2;            // User's full name
  string profile_picture_url = 3;  // Profile picture URL (optional)
  bool is_active = 4;              // Whether user is active
}

message GetBasicProfileResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  BasicProfileData profile = 4;
}

message UploadUserPhotoRequest {
  bytes photo_data = 1;
  string file_name = 2;
  string content_type = 3;
  int32 display_order = 4; // 1, 2, or 3
}

message UploadUserPhotoResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  string photo_url = 4;
}

message GetUserPhotosRequest {
  // No fields needed as user ID will be extracted from auth context
}

message UserPhotoData {
  string photo_url = 1;
  int32 display_order = 2;
  google.protobuf.Timestamp created_at = 3;
}

message GetUserPhotosResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  repeated UserPhotoData photos = 4;
}

message DeleteUserPhotoRequest {
  int32 display_order = 1;
}

message DeleteUserPhotoResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}


// Video messages
message UploadUserVideoRequest {
  bytes video_data = 1;
  string file_name = 2;
  string content_type = 3;
}

message UploadUserVideoResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  string video_url = 4;
}

message GetUserVideoRequest {
  // No fields needed as user ID will be extracted from auth context
}

message UserVideoData {
  string video_url = 1;
  string file_name = 2;
  int64 file_size = 3;
  int32 duration_seconds = 4;
  google.protobuf.Timestamp created_at = 5;
}

message GetUserVideoResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  UserVideoData video = 4;
}

message DeleteUserVideoRequest {
  // No fields needed as user ID will be extracted from auth context
}

message DeleteUserVideoResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}

message GetDetailedProfileRequest {
  uint64 profile_id = 1; // Profile ID of the user to view
}

message DetailedProfileData {
  // Basic Profile Information
  uint64 id = 1;
  bool is_bride = 2;
  string full_name = 3;
  string date_of_birth = 4;
  int32 height_cm = 5;
  bool physically_challenged = 6;
  string community = 7;
  string marital_status = 8;
  string profession = 9;
  string profession_type = 10;
  string highest_education_level = 11;
  string home_district = 12;
  string profile_picture_url = 13;
  google.protobuf.Timestamp last_login = 14;
  
  // Partner Preferences
  PartnerPreferencesData partner_preferences = 15;
  
  // Additional Photos
  repeated UserPhotoData additional_photos = 16;
  
  // Intro Video
  UserVideoData intro_video = 17;
  
  // Calculated Age
  int32 age = 18;
}

message GetDetailedProfileResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  DetailedProfileData profile = 4;
}

message GetProfileForAdminRequest {
  string user_uuid = 1; // User UUID from auth service
}