services:
  # Database services
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - qubool-net

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - qubool-net

  # mongodb:
  #   image: mongo:6-jammy
  #   container_name: mongodb
  #   ports:
  #   - "27017:27017"  # Explicitly expose MongoDB port
  #   volumes:
  #     - mongodb_data:/data/db
  #     - ./init-scripts/mongodb:/docker-entrypoint-initdb.d
  #   healthcheck:
  #     test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - qubool-net

  # Application services
  auth-migrate:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.migrate
      args:
        SERVICE: auth
    environment:
      - SERVICE_NAME=auth
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=auth_db
      - SERVICE_USER=auth_service
      - SERVICE_PASSWORD=auth_password
    volumes:
      - ../../services/auth/migrations/postgres:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - qubool-net
    # This is key - container stops after migrations are done
    restart: "no"

  # auth-service:
  auth-service:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.auth
    ports:
      - "50010:50010"  # HTTP 
      - "50011:50011"  # gRPC
    depends_on:
      # Auth service now depends on migrations being completed
      auth-migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=auth_service   # Service-specific DB user
      - POSTGRES_PASSWORD=auth_password
      - POSTGRES_DB=auth_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - LOG_LEVEL=debug
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:50010/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - qubool-net

  # user-migrate:
  #   build:
  #     context: ../../
  #     dockerfile: deploy/docker/Dockerfile.migrate
  #   environment:
  #     - SERVICE_NAME=user
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=password
  #     - DB_NAME=user_db
  #     - SERVICE_USER=user_service
  #     - SERVICE_PASSWORD=user_password
  #   volumes:
  #     - ../../services/user/migrations/postgres:/migrations
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - qubool-net
  #   restart: "no"

  # User service
  # user-service:
  #   build:
  #     context: ../../
  #     dockerfile: deploy/docker/Dockerfile.user
  #   ports:
  #     - "50000:50000"  # HTTP
  #     - "50001:50001"  # gRPC
  #   depends_on:
  #     user-migrate:
  #       condition: service_completed_successfully
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_USER=user_service
  #     - POSTGRES_PASSWORD=user_password
  #     - POSTGRES_DB=user_db
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - REDIS_PASSWORD=
  #     - REDIS_DB=0
  #     - LOG_LEVEL=debug
  #   healthcheck:
  #     test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:50000/health"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 15s
  #   networks:
  #     - qubool-net

  # chat-service:
  #   build:
  #     context: ../../
  #     dockerfile: deploy/docker/Dockerfile.chat
  #   ports:
  #     - "50020:50020"  # HTTP
  #     - "50021:50021"  # gRPC 
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:50053/health"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 15s
  #   networks:
  #     - qubool-net

  # admin-migrate:
  #   build:
  #     context: ../../
  #     dockerfile: deploy/docker/Dockerfile.migrate
  #   environment:
  #     - SERVICE_NAME=admin
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=password
  #     - DB_NAME=admin_db
  #     - SERVICE_USER=admin_service
  #     - SERVICE_PASSWORD=admin_password
  #   volumes:
  #     - ../../services/admin/migrations/postgres:/migrations

  # admin-service:
  #   build:
  #     context: ../../
  #     dockerfile: deploy/docker/Dockerfile.admin
  #   ports:
  #     - "50030:50030"  # HTTP
  #     - "50031:50031"  # gRPC
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_DB=admin
  #   healthcheck:
  #     test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:50054/health"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 15s
  #   networks:
  #     - qubool-net

  gateway-service:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.gateway
    ports:
      - "8080:8080"
    depends_on:
      auth-service:
        condition: service_healthy
      # user-service:
      #   condition: service_healthy
      # chat-service:
      #   condition: service_healthy
      # admin-service:
      #   condition: service_healthy
    environment:
      # - SERVICE_USER_HTTP=user-service:50000
      # - SERVICE_USER_GRPC=user-service:50001
      - SERVICE_AUTH_HTTP=auth-service:50010
      - SERVICE_AUTH_GRPC=auth-service:50011
      # - SERVICE_CHAT_HTTP=chat-service:50020
      # - SERVICE_CHAT_GRPC=chat-service:50021
      # - SERVICE_ADMIN_HTTP=admin-service:50030
      # - SERVICE_ADMIN_GRPC=admin-service:50031
      - LOG_LEVEL=debug
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8080/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - qubool-net

networks:
  qubool-net:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  # mongodb_data: