services:
  # Databases
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qubool_kallyanam
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: [
        "CMD-SHELL",
        "pg_isready -U postgres && psql -U postgres -lqt | cut -d \\| -f 1 | grep -qw qubool_kallyanam_auth && psql -U postgres -lqt | cut -d \\| -f 1 | grep -qw qubool_kallyanam_admin && psql -U postgres -lqt | cut -d \\| -f 1 | grep -qw qubool_kallyanam_user"
      ]
      interval: 5s
      timeout: 5s
      retries: 15
      start_period: 20s
    networks:
      - quboolkallyanam-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quboolkallyanam-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quboolkallyanam-network

  # Microservices
  auth-migrations:
    build:
      context: .
      dockerfile: deploy/docker/Dockerfile.migration
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=qubool_kallyanam_auth
      - DB_SSLMODE=disable
      - MIGRATIONS_DIR=/app/migrations
    volumes:
      - ./services/auth/migrations/postgres:/app/migrations
    depends_on:
      - postgres
    restart: on-failure
  auth:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.auth
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - "50051:50051"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: ["sh", "-c", "sleep 10 && ./auth"]
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=:50051 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 40s
    networks:
      - quboolkallyanam-network

  admin:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.admin
    environment:
      - DB_HOST=postgres
    ports:
      - "50052:50052"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["sh", "-c", "sleep 10 && ./admin"]
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=:50052 || exit 1"]
      interval: 10s     
      timeout: 10s
      retries: 10       
      start_period: 40s
    networks:
      - quboolkallyanam-network

  user:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.user
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - "50053:50053"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: ["sh", "-c", "sleep 10 && ./user"]
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=:50053 || exit 1"]
      interval: 10s    
      timeout: 10s
      retries: 10       
      start_period: 40s
    networks:
      - quboolkallyanam-network

  chat:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.chat
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    ports:
      - "50054:50054"
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=:50054 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - quboolkallyanam-network
  
  gateway:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.gateway
    environment:
      - AUTH_SERVICE_ADDR=auth:50051
      - ADMIN_SERVICE_ADDR=admin:50052
      - USER_SERVICE_ADDR=user:50053
      - CHAT_SERVICE_ADDR=chat:50054
    ports:
      - "8080:8080"
    depends_on:
      auth:
        condition: service_healthy
      admin:
        condition: service_healthy
      user:
        condition: service_healthy
      chat:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - quboolkallyanam-network

volumes:
  postgres_data:
  mongodb_data:

networks:
  quboolkallyanam-network:
    driver: bridge
