services:
  # Databases
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qubool_kallyanam
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/compose/postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: [
        "CMD-SHELL",
        "pg_isready -U postgres && psql -U postgres -lqt | cut -d \\| -f 1 | grep -qw qubool_kallyanam_auth && psql -U postgres -lqt | cut -d \\| -f 1 | grep -qw qubool_kallyanam_admin && psql -U postgres -lqt | cut -d \\| -f 1 | grep -qw qubool_kallyanam_user"
      ]
      interval: 5s
      timeout: 5s
      retries: 15
      start_period: 20s
    networks:
      - quboolkallyanam-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quboolkallyanam-network
  
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quboolkallyanam-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quboolkallyanam-network

  # Email testing service (for development)
  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025" # Web UI
      - "1025:1025" # SMTP server
    networks:
      - quboolkallyanam-network

volumes:
  postgres_data:
  mongodb_data:

networks:
  quboolkallyanam-network:
    driver: bridge