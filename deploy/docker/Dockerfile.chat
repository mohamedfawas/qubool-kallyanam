# Build stage
FROM golang:1.23.4-alpine AS builder

WORKDIR /app

# Copy go mod files first for better layer caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the chat service
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/bin/chat ./cmd/chat

# Runtime stage
FROM alpine:3.17

RUN apk --no-cache add ca-certificates tzdata && \
    adduser -D -g '' appuser

WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/bin/chat .
COPY config/chat.env /app/config/chat.env
COPY config/.env /app/config/.env

# Use non-root user
USER appuser

# Define healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD wget -qO- http://localhost:8083/health || exit 1

# Expose port
EXPOSE 8083

# Run the service
CMD ["/app/chat"]