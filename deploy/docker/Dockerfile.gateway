FROM golang:1.23.4-alpine AS builder

WORKDIR /app

ENV GOPROXY=https://goproxy.io,direct

# Install required packages (rarely changes)
RUN apk add --no-cache git wget

# Copy necessary go.mod files first (rarely changes)
COPY api/go.mod ./api/
COPY pkg/go.mod pkg/go.sum ./pkg/
COPY services/gateway/go.mod services/gateway/go.sum ./services/gateway/

# Download dependencies
WORKDIR /app/services/gateway
RUN go mod download -x

# Now copy the source code (changes frequently)
WORKDIR /app
COPY api/ ./api/
COPY pkg/ ./pkg/
COPY services/gateway/ ./services/gateway/

# Build the application
WORKDIR /app/services/gateway
RUN CGO_ENABLED=0 go build -o /gateway ./cmd/main.go

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates tzdata wget

WORKDIR /app

# Copy binary
COPY --from=builder /gateway .

# Copy config file
COPY services/gateway/configs/config.yaml ./configs/


# Expose port
EXPOSE 8080

# Run the application
CMD ["./gateway"]