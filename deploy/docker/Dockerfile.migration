FROM golang:1.23.4-alpine AS builder

WORKDIR /app

ENV GOPROXY=https://goproxy.io,direct

# Install required packages (rarely changes)
RUN apk add --no-cache git wget

# Copy necessary go.mod files first (rarely changes)
COPY tools/go.mod tools/go.sum ./tools/
COPY pkg/go.mod pkg/go.sum ./pkg/

# Download dependencies
WORKDIR /app/tools
RUN go mod download -x

# Now copy the source code (changes frequently)
WORKDIR /app
COPY tools/ ./tools/
COPY pkg/ ./pkg/

# Build the migration tool
WORKDIR /app/tools
RUN CGO_ENABLED=0 go build -o /migration ./cmd/migration/main.go

# Final image
FROM alpine:latest

RUN apk --no-cache add bash postgresql-client ca-certificates

WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /migration .

# Create migration entrypoint script
COPY deploy/docker/migration-entrypoint.sh ./entrypoint.sh
RUN chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]