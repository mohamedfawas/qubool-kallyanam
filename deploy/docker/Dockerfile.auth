FROM golang:1.23.4-alpine AS builder

WORKDIR /app

ENV GOPROXY=https://goproxy.io,direct

# Copy necessary go.mod files
COPY api/go.mod ./api/
COPY pkg/go.mod pkg/go.sum ./pkg/
COPY services/auth/go.mod services/auth/go.sum ./services/auth/

# Download dependencies
WORKDIR /app/services/auth
RUN go mod download -x

# Copy source code
WORKDIR /app
COPY api/ ./api/
COPY pkg/ ./pkg/
COPY services/auth/ ./services/auth/

# Build the application
WORKDIR /app/services/auth
RUN CGO_ENABLED=0 go build -o /auth ./cmd/main.go

# Install grpc_health_probe
RUN GRPC_HEALTH_PROBE_VERSION=v0.4.19 && \
    wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 && \
    chmod +x /bin/grpc_health_probe

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates tzdata

WORKDIR /app

# Copy binary and health probe
COPY --from=builder /auth .
COPY --from=builder /bin/grpc_health_probe /bin/grpc_health_probe

# Create config directory and copy config
RUN mkdir -p /app/configs
COPY services/auth/configs/config.yaml /app/configs/

# Expose port
EXPOSE 50051

# Run the application
CMD ["./auth"]