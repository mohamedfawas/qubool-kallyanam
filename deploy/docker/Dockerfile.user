FROM golang:1.23.4-alpine AS builder

WORKDIR /app

ENV GOPROXY=https://goproxy.io,direct

# Copy only necessary go.mod files
COPY pkg/go.mod pkg/go.sum ./pkg/
COPY services/user/go.mod ./services/user/

# Download dependencies
WORKDIR /app/services/user
RUN go mod download -x

# Copy source code
WORKDIR /app
COPY pkg/ ./pkg/
COPY services/user/ ./services/user/

# Build the application
WORKDIR /app/services/user
RUN CGO_ENABLED=0 go build -o /user ./cmd/main.go

# Install grpc_health_probe
RUN GRPC_HEALTH_PROBE_VERSION=v0.4.19 && \
    wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 && \
    chmod +x /bin/grpc_health_probe

# Use a small image for the final stage
FROM alpine:latest

WORKDIR /app

# Copy binary and health probe from builder stage
COPY --from=builder /user .
COPY --from=builder /bin/grpc_health_probe /bin/grpc_health_probe

# Copy config file
COPY services/user/configs/config.yaml ./configs/

# Expose port
EXPOSE 50053

# Run the application
CMD ["./user"]